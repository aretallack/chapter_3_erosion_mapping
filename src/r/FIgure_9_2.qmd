---
title: "Figure_9_Consistency_Profile"
format: html
editor_options: 
  chunk_output_type: console
---
```{r}
#| label: setup
# Load packages
pacman::p_load(terra, sf, tidyverse, ggpubr)

# Load functions
source("./src/r/functions.r")

# Load transects for elevation profiles
transects <- read_sf("./data/shp/Elevation_Profiles.shp")
paths <- c("./data/dems/sfm/20210505_Deep_RGB_2cm_DEM_clipped.tif",
           "./data/dems/sfm/20210506_Deep_RGB_2cm_DEM_clipped.tif",
           "./data/dems/lidar/20210316_Deep_LiDAR_DEM_clipped.tif",
           "./data/dems/lidar/20210317_Deep_LiDAR_DEM_clipped.tif")
```

```{r}
values <- create_elevation_profile(paths, "noveg_1", TRUE)

values <- values %>% 
  mutate(date = str_split(dataset, "_", simplify = T) %>% 
           .[,1],
         day = ifelse(str_detect(date, c("05$|16$")), "1", "2"),
         method = ifelse(str_detect(dataset, "RGB"), "RGB", "LiDAR"))

plot <- ggplot(values) +
  geom_line(aes(x = distance, y = elevation, colour = dataset, linetype = dataset),
            lwd = 0.3) +
  scale_y_continuous(breaks = seq(0, 1.5, by = 0.5)) +
  labs(x = "Distance (m)",
       y = "Elevation (m)",
       colour = "Dataset",
       linetype = "Dataset") +
  theme_classic() +
  theme(
    legend.box = "horizontal",
    legend.title = element_blank(),
    legend.position = c(0.25, 0.11),
    legend.text = element_text(size = unit(6, "cm")),
    legend.key.width = unit(0.5, "cm"),
    legend.key.height = unit(0.1, "cm"),
    legend.spacing.x = unit(0.1, "cm"),
    legend.background = element_rect(fill = "transparent"),
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 8, face = "bold"),
    plot.title = element_text(size = 10, face = "bold", hjust = -0.095)
  ) +
  labs(title = "Transect 1") +
  coord_cartesian(ylim = c(0, 1.5)) +
  scale_linetype_manual(values = c("solid", "dashed", "solid", "dashed"), labels = c("LiDAR (16th March 21)", "LiDAR (17th March 21)", "SfM (5th May 21)", "SfM (6th May 21)")) +
  scale_colour_manual(values = rep(RColorBrewer::brewer.pal(11, "PiYG")[c(3,9)], each = 2), labels = c("LiDAR (16th March 21)", "LiDAR (17th March 21)", "SfM (5th May 21)", "SfM (6th May 21)"))
```


# Transect 2

```{r}
values_2 <- create_elevation_profile(paths, "noveg_3", TRUE)

values_2 <- values_2 %>% 
  mutate(date = str_split(dataset, "_", simplify = T) %>% 
           .[,1],
         day = ifelse(str_detect(date, c("05$|16$")), "1", "2"),
         method = ifelse(str_detect(dataset, "RGB"), "RGB", "LiDAR"))

plot_2 <- ggplot(values_2) +
  # Plain black line plots behind coloured line (outline)
  # geom_line(aes(x = distance, y = elevation, group = dataset),
  #           lwd = 1.2) +
  # Lines coloured by dataset
  geom_line(aes(x = distance, y = elevation, colour = dataset, linetype = dataset),
            lwd = 0.3) +
  scale_y_continuous(breaks = seq(0, 2.5, by = 0.5)) +
  labs(x = "Distance (m)",
       y = "Elevation (m)",
       colour = "Dataset",
       linetype = "Dataset") +
  theme_classic() +
  theme(
    legend.box = "horizontal",
    legend.title = element_blank(),
    legend.position = c(0.25, 0.11),
    legend.text = element_text(size = unit(6, "cm")),
    legend.key.width = unit(0.5, "cm"),
    legend.key.height = unit(0.1, "cm"),
    legend.background = element_rect(fill = "transparent"),
    axis.text = element_text(size = 8),
    axis.title = element_text(size = 8, face = "bold"),
    plot.title = element_text(size = 10, face = "bold", hjust = -0.095)
  ) +
  labs(title = "Transect 2") +
  coord_cartesian(ylim = c(-0.3, 2.5)) +
  scale_linetype_manual(values = c("solid", "dashed", "solid", "dashed"), labels = c("LiDAR (16th March 21)", "LiDAR (17th March 21)", "SfM (5th May 21)", "SfM (6th May 21)")) +
  scale_colour_manual(values = rep(RColorBrewer::brewer.pal(11, "PiYG")[c(3,9)], each = 2), labels = c("LiDAR (16th March 21)", "LiDAR (17th March 21)", "SfM (5th May 21)", "SfM (6th May 21)"))

```

```{r}
ggpubr::ggarrange(
  plot,
  plot_2 + 
    rremove("y.title"),
  nrow = 1
  ) 

ggsave("./figures/figure_9_2_transect2.png",
       width = 16,
       height = 8,
       units = c("cm"))
```


